from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters, CallbackContext
import pytz
from datetime import datetime, timedelta
import os
from dotenv import load_dotenv

sa_timezone = pytz.timezone("Asia/Sakhalin")
now = datetime.now(sa_timezone)

load_dotenv()

API_TOKEN = os.environ.get("API_TOKEN")
WEBHOOK_URL = os.environ.get('WEBHOOK_URL')
PORT = int(os.environ.get('PORT', 5000))


stop_names = {
    "newr_to": "üöè –ê—Ä—Ç–∏–ª–ª–µ—Ä–∏–π—Å–∫–∞—è-2",
    "kontinent_to": "üöè –ö–æ–Ω—Ç–∏–Ω–µ–Ω—Ç",
    "gb_to": "üöè –¶–†–ë",
    "mag49_to": "üöè –ú–∞–≥–∞–∑–∏–Ω ‚Ññ49",
    "skver_pamyati_to": "üöè –°–∫–≤–µ—Ä –ü–∞–º—è—Ç–∏",
    "micro2": "üöè 2-–º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω",
    "mag_nika_to": "üöè –ú–∞–≥–∞–∑–∏–Ω –ù–∏–∫–∞",
    "kor_tam_to": "üöè –ö–æ—Ä—Å–∞–∫–æ—Å–∫–∞—è —Ç–∞–º–æ–∂–Ω—è",
    "komskver_to": "üöè –ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∏–π —Å–∫–≤–µ—Ä",
    "oazis_to": "üöè –û–∞–∑–∏—Å",
    "dk_okean_to": "üöè –î–ö –û–∫–µ–∞–Ω",
    "gb_from": "üöè –¶–†–ë",
    "dk_okean_from": "üöè –î–ö –û–∫–µ–∞–Ω",
    "oazis_from": "üöè –û–∞–∑–∏—Å",
    "yarmarka_from": "üöè –Ø—Ä–º–∞—Ä–∫–∞",
    "komskver_from": "üöè –ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∏–π —Å–∫–≤–µ—Ä",
    "u_kamina_from": "üöè –£ –∫–∞–º–∏–Ω–∞",
    "pyt_uglov_from": "üöè –ü—è—Ç–∞–∫",
    "skver_pamyati_from": "üöè –°–∫–≤–µ—Ä –ü–∞–º—è—Ç–∏",
    "mag49_from": "üöè –ú–∞–≥–∞–∑–∏–Ω ‚Ññ49",
    "mag_nika_from": "üöè –ú–∞–≥–∞–∑–∏–Ω –ù–∏–∫–∞",
    "mikro2_from": "üöè 2-–º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω",
    "newr_from": "üöè –ê—Ä—Ç–∏–ª–ª–µ—Ä–∏–π—Å–∫–∞—è-2"
}

# ======= –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è =======
stops_to_crb = ["newr_to", "micro2", "mag_nika_to", "mag49_to", "skver_pamyati_to", "kor_tam_to", "kontinent_to", "komskver_to", "oazis_to", "dk_okean_to", "gb_to"]
stops_from_crb = ["gb_from", "dk_okean_from", "oazis_from", "yarmarka_from", "komskver_from", "u_kamina_from", "pyt_uglov_from", "skver_pamyati_from", "mag49_from", "mag_nika_from", "mikro2_from", "newr_from"]

# ======= –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ =======
bus_schedule = {
    "newr_to": {"weekday": ["06:45","06:55","07:11","07:25","07:38","07:51","08:05","08:18","08:31","08:45","08:58","09:11","09:25","09:38","09:51","10:05","10:18","10:31","10:45","10:58","11:11","11:25","11:38","11:51","12:05","12:18","12:31","12:45","12:58","13:11","13:25","13:38","13:51","14:05","14:18","14:31","14:45","14:58","15:11","15:25","15:38","15:51","16:05","16:18","16:31","16:45","16:58","17:11","17:25","17:38","17:51","18:05","18:15","18:31","18:45","18:58","19:11","19:51","20:31"], "weekend": ["07:10", "19:10", 20]},
    "micro2": {"weekday": ["06:48", "06:58", "07:14", "07:28", "07:41", "07:54", "08:08", "08:21", "08:34", "08:48", "09:01", "09:14", "09:28", "09:41", "09:54", "10:08", "10:21", "10:34", "10:48", "11:01", "11:14", "11:28", "11:41", "11:54", "12:08", "12:21", "12:34", "12:48", "13:01", "13:14", "13:28", "13:41", "13:54", "14:08", "14:21", "14:34", "14:48", "15:01", "15:14", "15:28", "15:41", "15:54", "16:08", "16:21", "16:34", "16:48", "17:01", "17:14", "17:28", "17:41", "17:54", "18:08", "18:18", "18:34", "18:48", "19:01", "19:14", "19:54", "20:34"], "weekend": ["07:13", "19:13", 20]},
    "mag_nika_to": {"weekday": ["06:49","06:59","07:15","07:29","07:42","07:55","08:09","08:22","08:35","08:49","09:02","09:15","09:29","09:42","09:55","10:09","10:22","10:35","10:49","11:02","11:15","11:29","11:42","11:55","12:09","12:22","12:35","12:49","13:02","13:15","13:29","13:42","13:55","14:09","14:22","14:35","14:49","15:02","15:15","15:29","15:42","15:55","15:29","15:42","15:55","16:09","16:22","16:35","16:49","17:02","17:15","17:29","17:42","17:55","18:09","18:19","18:35","18:49","19:02","19:15","19:55","20:35"], "weekend": ["07:14", "19:14", 20]},
    "mag49_to":  {"weekday": ["06:50","07:03","07:16","07:30","07:43","07:56","08:10","08:23","08:36","08:50","09:03","09:16","09:30","09:43","09:56","10:10","10:23","10:36","10:50","11:03","11:16","11:30","11:43","11:56","12:10","12:23","12:36","12:50","13:03","13:16","13:30","13:43","13:56","14:10","14:23","14:36","14:50","15:03","15:16","15:30","15:43","15:56","16:10","16:23","16:36","16:50","17:03","17:16","17:30","17:43","17:56","18:10","18:23","18:36","18:50","19:03","19:16","19:56","20:36"], "weekend": ["07:15","19:15", 20]},
    "skver_pamyati_to": {"weekday": ["06:51","07:01","07:17","07:31","07:44","07:57","08:11","08:24","08:37","08:51","09:04","09:17","09:31","09:44","09:57","10:11","10:24","10:37","10:51","11:04","11:17","11:31","11:44","11:57","12:11","12:24","12:37","12:51","13:04","13:17","13:31","13:44","13:57","14:11","14:24","14:37","14:51","15:04","15:17","15:31","15:44","15:57","16:11","16:24","16:37","16:51","17:04","17:17","17:31","17:44","17:57","18:11","18:21","18:37","18:51","19:04","19:17","19:57","20:37"], "weekend": ["07:16","19:16", 20]},
    "kor_tam_to": {"weekday": ["06:53","07:03","07:19","07:33","07:46","07:59","08:13","08:26","08:39","08:53","09:06","09:19","09:33","09:46","09:59","10:13","10:26","10:39","10:53","11:06","11:19","11:33","11:46","11:59","12:13","12:26","12:39","12:53","13:06","13:19","13:33","13:46","13:59","14:13","14:26","14:39","14:53","15:06","15:19","15:33","15:46","15:59","16:13","16:26","16:39","16:53","17:06","17:19","17:33","17:46","17:59","18:13","18:23","18:39","18:53","19:06","19:19","19:59","20:39"], "weekend": ["07:18","19:18", 20]},
    "kontinent_to": {"weekday": ["06:54","07:04","07:20","07:34","07:47","08:00","08:14","08:27","08:40","08:54","09:07","09:20","09:34","09:47","10:00","10:14","10:27","10:40","10:54","11:07","11:20","11:34","11:47","12:00","12:14","12:27","12:40","12:54","13:07","13:20","13:34","13:47","14:00","14:14","14:27","14:40","14:54","15:07","15:20","15:34","15:47","16:00","16:14","16:27","16:40","16:54","17:07","17:20","17:34","17:47","18:00","18:14","18:24","18:40","18:54","19:07","19:20","20:00","20:40"], "weekend": ["07:19","19:19", 20]},
    "komskver_to": {"weekday": ["06:56","07:06","07:22","07:36","07:49","08:02","08:16","08:29","08:42","08:56","09:09","09:22","09:36","09:49","10:02","10:16","10:29","10:42","10:56","11:09","11:22","11:36","11:49","12:02","12:16","12:29","12:42","12:56","13:09","13:22","13:36","13:49","14:02","14:16","14:29","14:42","14:56","15:09","15:22","15:36","15:49","16:02","16:16","16:29","16:42","16:56","17:09","17:22","17:36","17:49","18:02","18:16","18:26","18:42","18:56","19:09","19:22","20:02","20:42"], "weekend": ["07:21","19:21", 20]},
    "oazis_to": {"weekday": ["06:58","07:08","07:24","07:38","07:51","08:04","08:18","08:31","08:44","08:58","09:11","09:24","09:38","09:51","10:04","10:18","10:31","10:44","10:58","11:11","11:24","11:38","11:51","12:04","12:18","12:31","12:44","12:58","13:11","13:24","13:38","13:51","14:04","14:18","14:31","14:44","14:58","15:11","15:24","15:38","15:51","16:04","16:18","16:31","16:44","16:58","17:11","17:24","17:38","17:51","18:04","18:18","18:28","18:44","18:58","19:11","19:24","20:04","20:44"], "weekend": ["07:23","19:23", 20]},
    "dk_okean_to": {"weekday": ["07:00","07:10","07:26","07:40","07:53","08:06","08:20","08:33","08:46","09:00","09:13","09:26","09:40","09:53","10:06","10:20","10:33","10:46","11:00","11:13","11:26","11:40","11:53","12:06","12:20","12:33","12:46","13:00","13:13","13:26","13:40","13:53","14:06","14:20","14:33","14:46","15:00","15:13","15:26","15:40","15:53","16:06","16:20","16:33","16:46","17:00","17:13","17:26","17:40","17:53","18:06","18:20","18:30","18:46","19:00","19:13","19:26","20:06","20:46"], "weekend": ["07:25","19:25", 20]},
    "gb_to": {"weekday": ["07:01","07:11","07:27","07:41","07:54","08:07","08:21","08:34","08:47","09:01","09:14","09:27","09:41","09:54","10:07","10:21","10:34","10:47","11:01","11:14","11:27","11:41","11:54","12:07","12:21","12:34","12:47","13:01","13:14","13:27","13:41","13:54","14:07","14:21","14:34","14:47","15:01","15:14","15:27","15:41","15:54","16:07","16:21","16:34","16:47","17:01","17:14","17:27","17:41","17:54","18:07","18:21","18:31","18:47","19:01","19:14","19:27","20:07","20:47"], "weekend": ["07:26","19:26", 20]},
    "gb_from": {"weekday": ["07:05","07:18","07:31","07:45","07:58","08:11","08:25","08:38","08:51","09:05","09:18","09:31","09:45","09:58","10:11","10:25","10:38","10:51","11:05","11:18","11:31","11:45","11:58","12:11","12:25","12:38","12:51","13:05","13:18","13:31","13:45","13:58","14:11","14:25","14:38","14:51","15:05","15:18","15:31","15:45","15:58","16:11","16:25","16:38","16:51","17:05","17:18","17:31","17:45","17:58","18:11","18:25","18:38","18:51","19:05","19:31","20:11","20:51"], "weekend": ["07:10","19:10", 20]},
    "dk_okean_from": {"weekday": ["07:06","07:19","07:32","07:46","07:59","08:12","08:26","08:39","08:52","09:06","09:19","09:32","09:46","09:59","10:12","10:26","10:39","10:52","11:06","11:19","11:32","11:46","11:59","12:12","12:26","12:39","12:52","13:06","13:19","13:32","13:46","13:59","14:12","14:26","14:39","14:52","15:06","15:19","15:32","15:46","15:59","16:12","16:26","16:39","16:52","17:06","17:19","17:32","17:46","17:59","18:12","18:26","18:39","18:52","19:06","19:32","20:12","20:52"], "weekend": ["07:11","19:11", 20]},
    "oazis_from": {"weekday": [ "07:08", "07:21", "07:34", "07:48", "08:01", "08:14", "08:28", "08:41","08:54", "09:08", "09:21", "09:34", "09:48", "10:01", "10:14", "10:28","10:41", "10:54", "11:08", "11:21", "11:34", "11:48", "12:01", "12:14","12:28", "12:41", "12:54", "13:08", "13:21", "13:34", "13:48", "14:01","14:14", "14:28", "14:41", "14:54", "15:08", "15:21", "15:34", "15:48","16:01", "16:14", "16:28", "16:41", "16:54", "17:08", "17:21", "17:34","17:48", "18:01", "18:14", "18:28", "18:41", "18:54", "19:08", "19:34","20:14", "20:54"], "weekend": ["07:13","19:13", 20]},
    "yarmarka_from": {"weekday": [ "07:10", "07:23", "07:36", "07:50", "08:03", "08:16", "08:30", "08:43","08:56", "09:10", "09:23", "09:36", "09:50", "10:03", "10:16", "10:30","10:43", "10:56", "11:10", "11:23", "11:36", "11:50", "12:03", "12:16","12:30", "12:43", "12:56", "13:10", "13:23", "13:36", "13:50", "14:03","14:16", "14:30", "14:43", "14:56", "15:10", "15:23", "15:36", "15:50","16:03", "16:16", "16:30", "16:43", "16:56", "17:10", "17:23", "17:36","17:50", "18:03", "18:16", "18:30", "18:43", "18:56", "19:10", "19:36","20:16", "20:56"], "weekend": ["07:15","19:15", 20]},
    "komskver_from": {"weekday": [ "07:11", "07:24", "07:37", "07:51", "08:04", "08:17", "08:31", "08:44","08:57", "09:11", "09:24", "09:37", "09:51", "10:04", "10:17", "10:31","10:44", "10:57", "11:11", "11:24", "11:37", "11:51", "12:04", "12:17","12:31", "12:44", "12:57", "13:11", "13:24", "13:37", "13:51", "14:04","14:17", "14:31", "14:44", "14:57", "15:11", "15:24", "15:37", "15:51","16:04", "16:17", "16:31", "16:44", "16:57", "17:11", "17:24", "17:37","17:51", "18:04", "18:17", "18:31", "18:44", "18:57", "19:11", "19:37","20:17", "20:57"], "weekend": ["07:16","19:16", 20]},
    "u_kamina_from": {"weekday": ["07:13", "07:26", "07:39", "07:53", "08:06", "08:19", "08:33", "08:46","08:59", "09:13", "09:26", "09:39", "09:53", "10:06", "10:19", "10:33","10:46", "10:59", "11:13", "11:26", "11:39", "11:53", "12:06", "12:19","12:33", "12:46", "12:59", "13:13", "13:26", "13:39", "13:53", "14:06","14:19", "14:33", "14:46", "14:59", "15:13", "15:26", "15:39", "15:53","16:06", "16:19", "16:33", "16:46", "16:59", "17:13", "17:26", "17:39","17:53", "18:06", "18:19", "18:33", "18:46", "18:59", "19:13", "19:39","20:19", "20:59"], "weekend": ["07:18","19:18", 20]},
    "pyt_uglov_from": {"weekday": [ "07:14", "07:27", "07:40", "07:54", "08:07", "08:20", "08:34", "08:47","09:00", "09:14", "09:27", "09:40", "09:54", "10:07", "10:20", "10:34","10:47", "11:00", "11:14", "11:27", "11:40", "11:54", "12:07", "12:20","12:34", "12:47", "13:00", "13:14", "13:27", "13:40", "13:54", "14:07","14:20", "14:34", "14:47", "15:00", "15:14", "15:27", "15:40", "15:54","16:07", "16:20", "16:34", "16:47", "17:00", "17:14", "17:27", "17:40","17:54", "18:07", "18:20", "18:34", "18:47", "19:00", "19:14", "19:40","20:20", "21:00"], "weekend": ["07:19","19:19", 20]},
    "skver_pamyati_from": {"weekday": ["07:17", "07:30", "07:43", "07:57", "08:10", "08:23", "08:37", "08:50","09:03", "09:17", "09:30", "09:43", "09:57", "10:10", "10:23", "10:37","10:50", "11:03", "11:17", "11:30", "11:43", "11:57", "12:10", "12:23","12:37", "12:50", "13:03", "13:17", "13:30", "13:43", "13:57", "14:10","14:23", "14:37", "14:50", "15:03", "15:17", "15:30", "15:43", "15:57","16:10", "16:23", "16:37", "16:50", "17:03", "17:17", "17:30", "17:43","17:57", "18:10", "18:23", "18:37", "18:50", "19:03", "19:17", "19:43","20:23", "21:03"], "weekend": ["07:22","19:22", 20]},
    "mag49_from": {"weekday": [ "07:18", "07:31", "07:44", "07:58", "08:11", "08:24", "08:38", "08:51","09:04", "09:18", "09:31", "09:44", "09:58", "10:11", "10:24", "10:38","10:51", "11:04", "11:18", "11:31", "11:44", "11:58", "12:11", "12:24","12:38", "12:51", "13:04", "13:18", "13:31", "13:44", "13:58", "14:11","14:24", "14:38", "14:51", "15:04", "15:18", "15:31", "15:44", "15:58","16:11", "16:24", "16:38", "16:51", "17:04", "17:18", "17:31", "17:44","17:58", "18:11", "18:24", "18:38", "18:51", "19:04", "19:18", "19:44","20:24", "21:04"], "weekend": ["07:23","19:23", 20]},
    "mag_nika_from": {"weekday": [ "07:19", "07:32", "07:45", "07:59", "08:12", "08:25", "08:39", "08:52","09:05", "09:19", "09:32", "09:45", "09:59", "10:12", "10:25", "10:39","10:52", "11:05", "11:19", "11:32", "11:45", "11:59", "12:12", "12:25","12:39", "12:52", "13:05", "13:19", "13:32", "13:45", "13:59", "14:12","14:25", "14:39", "14:52", "15:05", "15:19", "15:32", "15:45", "15:59","16:12", "16:25", "16:39", "16:52", "17:05", "17:19", "17:32", "17:45","17:59", "18:12", "18:25", "18:39", "18:52", "19:05", "19:19", "19:45","20:25", "21:05"], "weekend": ["07:24","19:24", 20]},
    "mikro2_from": {"weekday": [ "07:20", "07:33", "07:46", "08:00", "08:13", "08:26", "08:40", "08:53","09:06", "09:20", "09:33", "09:46", "10:00", "10:13", "10:26", "10:40","10:53", "11:06", "11:20", "11:33", "11:46", "12:00", "12:13", "12:26","12:40", "12:53", "13:06", "13:20", "13:33", "13:46", "14:00", "14:13","14:26", "14:40", "14:53", "15:06", "15:20", "15:33", "15:46", "16:00","16:13", "16:26", "16:40", "16:53", "17:06", "17:20", "17:33", "17:46","18:00", "18:13", "18:26", "18:40", "18:53", "19:06", "19:20", "19:46","20:26", "21:06"], "weekend": ["07:25","19:25", 20]},
    "newr_from": {"weekday": ["07:22", "07:35", "07:48", "08:02", "08:15", "08:28", "08:42", "08:55","09:08", "09:22", "09:35", "09:48", "10:02", "10:15", "10:28", "10:42","10:55", "11:08", "11:22", "11:35", "11:48", "12:02", "12:15", "12:28","12:42", "12:55", "13:08", "13:22", "13:35", "13:48", "14:02", "14:15","14:28", "14:42", "14:55", "15:08", "15:22", "15:35", "15:48", "16:02","16:15", "16:28", "16:42", "16:55", "17:08", "17:22", "17:35", "17:48","18:02", "18:15", "18:28", "18:42", "18:55", "19:08", "19:22", "19:48","20:28", "21:08"], "weekend": ["07:27","19:27", 20]}

}

user_state = {}
# ======= –î–Ω–∏ –Ω–µ–¥–µ–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º =======
ru_days = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫","–í—Ç–æ—Ä–Ω–∏–∫","–°—Ä–µ–¥–∞","–ß–µ—Ç–≤–µ—Ä–≥","–ü—è—Ç–Ω–∏—Ü–∞","–°—É–±–±–æ—Ç–∞","–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]
greeted_users = set()
# ======= –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π =======
async def delete_previous_messages(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        await update.message.delete()
    except:
        pass
    # —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
    chat_id = update.effective_chat.id
    if 'last_bot_message' in context.chat_data:
        try:
            await context.bot.delete_message(chat_id=chat_id, message_id=context.chat_data['last_bot_message'])
        except:
            pass

# ======= –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ =======
greeted_users = set()

def main_menu_keyboard():
    keyboard = [[KeyboardButton("üöå –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")]]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)


def route_keyboard():
    keyboard = [
        [KeyboardButton("üöç –ú–∞—Ä—à—Ä—É—Ç ‚Ññ1"), KeyboardButton("üöç –ú–∞—Ä—à—Ä—É—Ç ‚Ññ3")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def direction_keyboard():
    keyboard = [
        [KeyboardButton("‚¨ÜÔ∏è –ö –¶–†–ë ‚¨ÜÔ∏è"), KeyboardButton("‚¨áÔ∏è –û—Ç –¶–†–ë ‚¨áÔ∏è")],
        [KeyboardButton("üîÉ –°–º–µ–Ω–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç üîÉ")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)


def stop_keyboard(direction):
    stops = stops_to_crb if direction == "‚¨ÜÔ∏è –ö –¶–†–ë ‚¨ÜÔ∏è" else stops_from_crb
    keyboard = [[KeyboardButton(stop_names[s])] for s in stops]
    keyboard.append([KeyboardButton("üîÉ –°–º–µ–Ω–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ üîÉ")])
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def final_keyboard():
    keyboard = [
        [KeyboardButton("üîÉ –°–º–µ–Ω–∏—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–∫—É üîÉ")],
        [KeyboardButton("üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é üè†")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
# ======= –°—Ç–µ–π—Ç =======
# ======= /start =======
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    if chat_id not in greeted_users:
        greeted_users.add(chat_id)
        msg = await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–±—É—Å–æ–≤ üöå.\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —É–¥–∞–ª—è–π—Ç–µ –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –æ–Ω–æ –Ω—É–∂–Ω–æ –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞."
    )
    context.chat_data['last_bot_message'] = msg.message_id
    
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    msg = await update.message.reply_text("‚¨áÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨áÔ∏è", reply_markup=main_menu_keyboard())
    context.chat_data['last_bot_message'] = msg.message_id
    user_state[chat_id] = {}

# ======= –•—ç–Ω–¥–ª–µ—Ä—ã =======

async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await delete_previous_messages(update, context)
    text = update.message.text
    chat_id = update.effective_chat.id
    state = user_state.get(chat_id, {})

    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if text == "üöå –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
        msg = await update.message.reply_text("‚¨áÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç ‚¨áÔ∏è", reply_markup=route_keyboard())
        context.chat_data['last_bot_message'] = msg.message_id
        return

    # –ú–∞—Ä—à—Ä—É—Ç
    if text in ["üöç –ú–∞—Ä—à—Ä—É—Ç ‚Ññ1", "üöç –ú–∞—Ä—à—Ä—É—Ç ‚Ññ3"]:
        state['route'] = text
        user_state[chat_id] = state
        if text == "üöç –ú–∞—Ä—à—Ä—É—Ç ‚Ññ1":
            msg = await update.message.reply_text("–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ‚ö†Ô∏è", reply_markup=route_keyboard())
        else:
            msg = await update.message.reply_text("‚¨áÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ‚¨áÔ∏è", reply_markup=direction_keyboard())
        context.chat_data['last_bot_message'] = msg.message_id
        return

    # –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    if text in ["‚¨ÜÔ∏è –ö –¶–†–ë ‚¨ÜÔ∏è", "‚¨áÔ∏è –û—Ç –¶–†–ë ‚¨áÔ∏è"]:
        state['direction'] = text
        user_state[chat_id] = state
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –º–∞—Ä—à—Ä—É—Ç–∞ + —Ç–µ–∫—Å—Ç
        photo_path = "maps/route_3.jpg"  # —Ñ–æ—Ç–æ –º–∞—Ä—à—Ä—É—Ç–∞
        msg_text = f"üó∫Ô∏è –í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {text}. –í—ã–±–µ—Ä–∏—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞ ‚¨áÔ∏è"
        msg = await update.message.reply_photo(open(photo_path, "rb"), caption=msg_text, reply_markup=stop_keyboard(text))
        context.chat_data['last_bot_message'] = msg.message_id
        return

    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞
    if text in stop_names.values():
        stop_id = [k for k, v in stop_names.items() if v == text][0]
        day_type = "weekday" if datetime.now(sa_timezone).weekday() < 5 else "weekend"
        times = bus_schedule.get(stop_id, {}).get(day_type, [])
        now = datetime.now(sa_timezone)
        next_bus = None
        following_bus = None
        for t in times:
            bus_time_naive = datetime.strptime(t, "%H:%M")
        bus_time = sa_timezone.localize(
            bus_time_naive.replace(year=now.year, month=now.month, day=now.day)
        )
        if bus_time >= now and not next_bus:
            next_bus = bus_time
        elif bus_time >= now and next_bus and not following_bus:
            following_bus = bus_time

        msg_text = ( 
            f"üìç –û—Å—Ç–∞–Ω–æ–≤–∫–∞: {text}\n"
            f"üìÖ –°–µ–≥–æ–¥–Ω—è: {ru_days[now.weekday()]}\n"
            f"‚è∞ –°–µ–π—á–∞—Å: {now.strftime('%H:%M')}\n"
        )
        if next_bus:
            delta_next = int((next_bus - now).total_seconds() // 60)
            msg_text += f"‚è≥ –ë–ª–∏–∂–∞–π—à–∏–π –∞–≤—Ç–æ–±—É—Å: {next_bus.strftime('%H:%M')} ({delta_next} –º–∏–Ω)\n"
        if following_bus:
            delta_follow = int((following_bus - now).total_seconds() // 60)
            msg_text += f"üïë –°–ª–µ–¥—É—é—â–∏–π –∞–≤—Ç–æ–±—É—Å: {following_bus.strftime('%H:%M')} ({delta_follow} –º–∏–Ω)\n"

        # –§–æ—Ç–æ –∞–≤—Ç–æ–±—É—Å–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
        if next_bus:
            if delta_next < 5:
                photo = "maps/photo_soon.jpg"
            elif delta_next > 60:
                photo = "maps/photo_normal.jpg"
            else:
                photo = "maps/photo_later.jpg"
            msg = await update.message.reply_photo(open(photo, "rb"), caption=msg_text, reply_markup=final_keyboard())
        else:
            msg = await update.message.reply_text(msg_text, reply_markup=final_keyboard())

        context.chat_data['last_bot_message'] = msg.message_id
        return

    # –ö–Ω–æ–ø–∫–∏ —Å–º–µ–Ω—ã
    if text == "üîÉ –°–º–µ–Ω–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç üîÉ":
        msg = await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç:", reply_markup=route_keyboard())
        context.chat_data['last_bot_message'] = msg.message_id
        return
    if text == "üîÉ –°–º–µ–Ω–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ üîÉ":
        msg = await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:", reply_markup=direction_keyboard())
        context.chat_data['last_bot_message'] = msg.message_id
        return
    if text == "üîÉ –°–º–µ–Ω–∏—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–∫—É üîÉ":
        direction = state.get('direction', "–í –¶–†–ë")
        msg = await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∫—É:", reply_markup=stop_keyboard(direction))
        context.chat_data['last_bot_message'] = msg.message_id
        return
    if text == "üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é üè†":
        msg = await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu_keyboard())
        context.chat_data['last_bot_message'] = msg.message_id
        user_state[chat_id] = {}
        return

# ======= –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ =======


app = ApplicationBuilder().token(API_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))

if __name__ == "__main__":
    app.run_polling()